[{"D:\\React\\excel\\src\\index.js":"1","D:\\React\\excel\\src\\components\\layout.js":"2","D:\\React\\excel\\src\\components\\modal.js":"3","D:\\React\\excel\\src\\containers\\menuBar\\menuBar.js":"4","D:\\React\\excel\\src\\containers\\googleAuthComponent\\googleAuthComponent.js":"5","D:\\React\\excel\\src\\components\\textInput\\textInput.js":"6"},{"size":203,"mtime":1611823854486,"results":"7","hashOfConfig":"8"},{"size":1010,"mtime":1611693214716,"results":"9","hashOfConfig":"8"},{"size":563,"mtime":1611824276645,"results":"10","hashOfConfig":"8"},{"size":703,"mtime":1611823892530,"results":"11","hashOfConfig":"8"},{"size":5587,"mtime":1611834230054,"results":"12","hashOfConfig":"8"},{"size":387,"mtime":1611835900560,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"13tzaj9",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\React\\excel\\src\\index.js",[],["28","29"],"D:\\React\\excel\\src\\components\\layout.js",[],"D:\\React\\excel\\src\\components\\modal.js",[],"D:\\React\\excel\\src\\containers\\menuBar\\menuBar.js",[],"D:\\React\\excel\\src\\containers\\googleAuthComponent\\googleAuthComponent.js",["30"],"import { useEffect, useState } from 'react';\r\nimport {gapi} from 'gapi-script';\r\n\r\nimport TextInput from '../../components/textInput/textInput';\r\n\r\nimport './googleAuthComponent.css';\r\nimport '../../materialize/button.css';\r\nimport '../../materialize/shadow.css';\r\nimport '../../materialize/card.css';\r\nimport '../../materialize/preloader.css';\r\nimport '../../materialize/fade.css';\r\nimport '../../materialize/textInput.css';\r\n\r\nimport React from 'react';\r\nimport Modal from \"../../components/modal\";\r\n\r\nlet googleAuth;\r\nconst API_KEY = 'AIzaSyD7EpkVfwnYbLmrpFxtnKX7EzqgXgHZO_Y';\r\nconst CLIENT_ID = '811477700755-dhv125fsgng4sss3mghpobho9dvtlvb5.apps.googleusercontent.com';\r\nconst SCOPES = 'https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/spreadsheets';\r\nconst DISCOVERY_DOCS = ['https://sheets.googleapis.com/$discovery/rest?version=v4'];\r\n\r\nexport default function GoogleAuthComponent({authState}) {\r\n  const [popupOpened, setPopupOpened] = useState(false);\r\n\r\n  useEffect(\r\n    () => {\r\n      gapi.load('client:auth2', initClient);\r\n\r\n      function initClient() {\r\n        gapi.client.init({\r\n          'apiKey': API_KEY,\r\n          'clientId': CLIENT_ID,\r\n          'scope': SCOPES,\r\n          'discoveryDocs': DISCOVERY_DOCS,\r\n        });\r\n\r\n        authState.inited.set(true);\r\n\r\n        googleAuth = gapi.auth2.getAuthInstance();\r\n        googleAuth.isSignedIn.listen(() => authState.signedIn.set(googleAuth.isSignedIn.get()));\r\n        authState.signedIn.set(googleAuth.isSignedIn.get());\r\n        console.log(googleAuth.currentUser.get().getBasicProfile());\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const handleLogInClick = () => {\r\n    if (authState.inited.state && !authState.signedIn.state) googleAuth.signIn();\r\n  };\r\n\r\n  const handleLogOutClick = () => {\r\n    if (authState.inited.state && authState.signedIn.state) {\r\n      googleAuth.signOut();\r\n      setPopupOpened(false);\r\n    }\r\n  };\r\n\r\n  const handleRevokeAccessClick = () => {\r\n    if (authState.inited.state && authState.signedIn.state) {\r\n      googleAuth.disconnect();\r\n      setPopupOpened(false);\r\n    }\r\n  };\r\n\r\n  const handleFetchClick = async () => {\r\n    if (authState.signedIn.state) {\r\n      try {\r\n        console.log(gapi.client.sheets.spreadsheets.values);\r\n        const response = await gapi.client.sheets.spreadsheets.values.get({\r\n          spreadsheetId: '1MenH8sjNj5_lDjbQClo15lQ4W2Q_PZmTIX9_m_ogNuc',\r\n          range: \"'Бюджет'!A1\",\r\n          valueRenderOption: 'UNFORMATTED_VALUE',\r\n          dateTimeRenderOption: 'FORMATTED_STRING',\r\n        });\r\n\r\n        const range = response.result;\r\n\r\n        console.log(range);\r\n\r\n        const newRange = {\r\n          values: [[2]],\r\n        };\r\n\r\n        const result = await gapi.client.sheets.spreadsheets.values.update({\r\n          spreadsheetId: '1MenH8sjNj5_lDjbQClo15lQ4W2Q_PZmTIX9_m_ogNuc',\r\n          range: \"'Бюджет'!A1\",\r\n          valueInputOption: 'RAW',\r\n          resource: newRange,\r\n        });\r\n\r\n        console.log(result);\r\n      } catch (response) {\r\n        console.log(response);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleUserImageClick = () => {\r\n    setPopupOpened(prevState => !prevState);\r\n  }\r\n\r\n  const userInfo = authState.signedIn.state \r\n    ? {\r\n      name: googleAuth.currentUser.get().getBasicProfile().getName(),\r\n      email: googleAuth.currentUser.get().getBasicProfile().getEmail(),\r\n      imageUrl: googleAuth.currentUser.get().getBasicProfile().getImageUrl(),\r\n    }\r\n    : {};\r\n\r\n  const barButton = \r\n  !authState.inited.state ?\r\n    <div className='progress'>\r\n      <div className='indeterminate'></div>\r\n    </div>\r\n  :\r\n    authState.signedIn.state ?\r\n      <div className='bar__image-container'>\r\n        <img \r\n          src={userInfo.imageUrl} \r\n          alt={userInfo.name} \r\n          className={`bar__user-image ${popupOpened ? 'bar__user-image__active' : ''}`}\r\n          onClick={handleUserImageClick}\r\n        />\r\n      </div>\r\n    :\r\n      <button\r\n        onClick={handleLogInClick}\r\n        className='btn green darken-3'\r\n      >\r\n        Log in\r\n      </button>\r\n    ;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className='bar__account-button'>\r\n        {barButton}\r\n      </div>\r\n      <Modal \r\n        className='bar__popup card green lighten-5 fade-in__top-right'\r\n        opened={popupOpened}\r\n        setOpened={setPopupOpened}\r\n        layoutOpacity='0'\r\n      >\r\n        <div className='card-content'>\r\n          <div className='popup__account'>\r\n            <img \r\n              src={userInfo.imageUrl} \r\n              alt={userInfo.name} \r\n              className='popup__user-image'\r\n            />\r\n            <p>\r\n              {userInfo.name}\r\n            </p>\r\n            <p>\r\n              {userInfo.email}\r\n            </p>\r\n            <button onClick={handleLogOutClick} className='btn-small green darken-3 z-depth-0'>\r\n              Log out\r\n            </button>\r\n            <button onClick={handleRevokeAccessClick} className='btn-small green darken-3 z-depth-0'> \r\n              Revoke access\r\n            </button>\r\n          </div>\r\n          <hr/>\r\n          {/* <div class='input-field'>\r\n            <input id='popup__sheetId' type='text' class='validate'/>\r\n            <label htmlFor='popup__sheetId'>Spreadsheet ID</label>\r\n          </div> */}\r\n          <TextInput id='popup_sheetId' label='SpreadSheet ID'/>\r\n          <button onClick={handleFetchClick} className='btn green darken-3 z-depth-0'>\r\n            fetch data\r\n          </button>\r\n        </div>\r\n      </Modal>\r\n    </React.Fragment>\r\n  );\r\n}","D:\\React\\excel\\src\\components\\textInput\\textInput.js",["31","32"],{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":46,"column":5,"nodeType":"39","endLine":46,"endColumn":7,"suggestions":"40"},{"ruleId":"41","severity":1,"message":"42","line":5,"column":10,"nodeType":"43","messageId":"44","endLine":5,"endColumn":16},{"ruleId":"41","severity":1,"message":"45","line":5,"column":18,"nodeType":"43","messageId":"44","endLine":5,"endColumn":27},"no-native-reassign",["46"],"no-negated-in-lhs",["47"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'authState.inited' and 'authState.signedIn'. Either include them or remove the dependency array.","ArrayExpression",["48"],"no-unused-vars","'active' is assigned a value but never used.","Identifier","unusedVar","'setActive' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"49","fix":"50"},"Update the dependencies array to be: [authState.inited, authState.signedIn]",{"range":"51","text":"52"},[1624,1626],"[authState.inited, authState.signedIn]"]