[{"D:\\React\\excel\\src\\index.js":"1","D:\\React\\excel\\src\\containers\\menuBar\\index.js":"2","D:\\React\\excel\\src\\containers\\googleAuth\\index.js":"3","D:\\React\\excel\\src\\containers\\app\\index.js":"4","D:\\React\\excel\\src\\containers\\popup\\index.js":"5","D:\\React\\excel\\src\\constants\\index.js":"6","D:\\React\\excel\\src\\components\\modal\\index.js":"7","D:\\React\\excel\\src\\components\\textInput\\index.js":"8","D:\\React\\excel\\src\\components\\layout\\index.js":"9","D:\\React\\excel\\src\\errors\\index.js":"10"},{"size":191,"mtime":1611911634224,"results":"11","hashOfConfig":"12"},{"size":765,"mtime":1611998669823,"results":"13","hashOfConfig":"12"},{"size":2927,"mtime":1611920128409,"results":"14","hashOfConfig":"12"},{"size":352,"mtime":1611913807693,"results":"15","hashOfConfig":"12"},{"size":4856,"mtime":1611953422680,"results":"16","hashOfConfig":"12"},{"size":451,"mtime":1611911079341,"results":"17","hashOfConfig":"12"},{"size":739,"mtime":1611918495035,"results":"18","hashOfConfig":"12"},{"size":1230,"mtime":1611946018286,"results":"19","hashOfConfig":"12"},{"size":1015,"mtime":1611918577942,"results":"20","hashOfConfig":"12"},{"size":89,"mtime":1611911116781,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"13tzaj9",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"D:\\React\\excel\\src\\index.js",[],["46","47"],"D:\\React\\excel\\src\\containers\\menuBar\\index.js",[],"D:\\React\\excel\\src\\containers\\googleAuth\\index.js",["48"],"import React, { useEffect, useMemo, useState } from 'react';\r\n\r\nimport {gapi} from 'gapi-script';\r\n\r\nimport Popup from '../popup/index';\r\n\r\nimport { API_KEY, CLIENT_ID, SCOPES, DISCOVERY_DOCS } from '../../constants/index';\r\n\r\nimport './index.css';\r\n\r\nexport default function GoogleAuth({authState}) {\r\n  const [ isInited, setIsInited ] = useState(false);\r\n\r\n  const [ googleAuth, setGoogleAuth ] = useState(null);\r\n  const googleAuthState = useMemo (\r\n    () => (\r\n      {\r\n        value: googleAuth,\r\n        set: setGoogleAuth,\r\n      }\r\n    ),\r\n    [googleAuth, setGoogleAuth]\r\n  );\r\n\r\n  const [ popupOpened, setPopupOpened ] = useState(false);\r\n  const popupOpenedState = useMemo(\r\n    () => (\r\n      {\r\n        value: popupOpened,\r\n        set: setPopupOpened,\r\n      }\r\n    ),\r\n    [popupOpened, setPopupOpened]\r\n  );\r\n\r\n  useEffect(\r\n    () => {\r\n      gapi.load('client:auth2', initClient);\r\n\r\n      function initClient() {\r\n        gapi.client.init({\r\n          'apiKey': API_KEY,\r\n          'clientId': CLIENT_ID,\r\n          'scope': SCOPES,\r\n          'discoveryDocs': DISCOVERY_DOCS,\r\n        });\r\n\r\n        setIsInited(true);\r\n\r\n        const googleAuthInstance = gapi.auth2.getAuthInstance();\r\n\r\n        setGoogleAuth(googleAuthInstance);\r\n        googleAuthInstance.isSignedIn.listen(() => authState.isSignedIn.set(googleAuthInstance.isSignedIn.get()));\r\n        authState.isSignedIn.set(googleAuthInstance.isSignedIn.get());\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const handleLogInClick = () => {\r\n    if (isInited) googleAuth.signIn();\r\n  };\r\n\r\n  const handleUserImageClick = () => {\r\n    setPopupOpened(prevState => !prevState);\r\n  }\r\n\r\n  const userInfo = \r\n    authState.isSignedIn.value ?\r\n      {\r\n        name: googleAuth.currentUser.get().getBasicProfile().getName(),\r\n        email: googleAuth.currentUser.get().getBasicProfile().getEmail(),\r\n        imageUrl: googleAuth.currentUser.get().getBasicProfile().getImageUrl(),\r\n      }\r\n    : \r\n      {}\r\n  ;\r\n\r\n  const barButton = \r\n    !isInited ?\r\n      <div className='progress'>\r\n        <div className='indeterminate'></div>\r\n      </div>\r\n    :\r\n      authState.isSignedIn.value ?\r\n        <div className='bar__image-container'>\r\n          <img \r\n            src={userInfo.imageUrl} \r\n            alt='User pic' \r\n            className={`bar__user-image ${popupOpened ? 'bar__user-image__active' : ''}`}\r\n            onClick={handleUserImageClick}\r\n          />\r\n        </div>\r\n      :\r\n        <button\r\n          onClick={handleLogInClick}\r\n          className='btn green darken-3'\r\n        >\r\n          Log in\r\n        </button>\r\n  ;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className='bar__account-button'>\r\n        {barButton}\r\n      </div>\r\n      <Popup \r\n        authState={authState}\r\n        googleAuthState={googleAuthState}\r\n        openedState={popupOpenedState}\r\n        userInfo={userInfo}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n}","D:\\React\\excel\\src\\containers\\app\\index.js",[],"D:\\React\\excel\\src\\containers\\popup\\index.js",["49"],"import React, { useEffect, useMemo, useState } from 'react';\r\n\r\nimport {gapi} from 'gapi-script';\r\n\r\nimport Modal from '../../components/modal/index';\r\nimport TextInput from '../../components/textInput/index';\r\nimport { UrlError, TemplateError } from '../../errors/index';\r\n\r\nimport { TEMPLATE_KEY } from '../../constants/index';\r\n\r\nimport './index.css';\r\n\r\nexport default function Popup(\r\n  {\r\n    authState,\r\n    googleAuthState,\r\n    openedState,\r\n    userInfo,\r\n  }\r\n) {\r\n  const [ sheetUrl, setSheetUrl ] = useState('');\r\n  const sheetUrlState = useMemo (\r\n    () => (\r\n      {\r\n        value: sheetUrl,\r\n        set: setSheetUrl,\r\n      }\r\n    ),\r\n    [sheetUrl, setSheetUrl]\r\n  );\r\n\r\n  const [ attachingError, setAttachingError ] = useState(null);\r\n\r\n  useEffect(\r\n    () => {\r\n      if (!openedState.value) {\r\n        if (attachingError) setSheetUrl('');\r\n        setAttachingError(null);\r\n      }\r\n    },\r\n    [openedState.value, attachingError]\r\n  )\r\n\r\n  const handleLogOutClick = () => {\r\n    googleAuthState.value.signOut();\r\n    openedState.set(false);\r\n  };\r\n\r\n  const handleRevokeAccessClick = () => {\r\n    googleAuthState.value.disconnect();\r\n    openedState.set(false);\r\n  };\r\n\r\n  const handleAttachClick = async () => {\r\n    try {\r\n      const indexLeft = sheetUrl.indexOf('docs.google.com/spreadsheets/d/') + 'docs.google.com/spreadsheets/d/'.length;\r\n      \r\n      if (indexLeft === 30) throw (new UrlError('The given URL is not valid'));\r\n      \r\n      const leftCuttedUrl = sheetUrl.slice(indexLeft);\r\n      const indexRight = leftCuttedUrl.indexOf('/');\r\n      const sheetId = leftCuttedUrl.slice(0, indexRight > 0 ? indexRight : undefined);\r\n\r\n      const response = await gapi.client.sheets.spreadsheets.values.get({\r\n        spreadsheetId: sheetId,\r\n        range: \"'Сводная таблица'!I20\",\r\n        valueRenderOption: 'UNFORMATTED_VALUE',\r\n        dateTimeRenderOption: 'FORMATTED_STRING',\r\n      });\r\n\r\n      const fetchedTemplateKey = \r\n        response.result.values ?\r\n          response.result.values[0][0]\r\n        :\r\n          null\r\n      ;\r\n      \r\n      if (fetchedTemplateKey !== TEMPLATE_KEY) {\r\n        throw new TemplateError('The spreadsheet is not a template');\r\n      }\r\n\r\n      setAttachingError(null);\r\n      authState.sheetId.set(sheetId);\r\n    } catch (error) {\r\n      setAttachingError(error);\r\n      authState.sheetId.set(null);\r\n    }\r\n  }\r\n\r\n  const handleFetchClick = async () => {\r\n    try {\r\n      const response = await gapi.client.sheets.spreadsheets.values.get({\r\n        spreadsheetId: '1MenH8sjNj5_lDjbQClo15lQ4W2Q_PZmTIX9_m_ogNuc',\r\n        range: \"'Бюджет'!A1\",\r\n        valueRenderOption: 'UNFORMATTED_VALUE',\r\n        dateTimeRenderOption: 'FORMATTED_STRING',\r\n      });\r\n\r\n      const range = response.result;\r\n\r\n      console.log(range);\r\n\r\n      const newRange = {\r\n        values: [[2]],\r\n      };\r\n\r\n      const result = await gapi.client.sheets.spreadsheets.values.update({\r\n        spreadsheetId: '1MenH8sjNj5_lDjbQClo15lQ4W2Q_PZmTIX9_m_ogNuc',\r\n        range: \"'Бюджет'!A1\",\r\n        valueInputOption: 'RAW',\r\n        resource: newRange,\r\n      });\r\n\r\n      console.log(result);\r\n    } catch (response) {\r\n      console.log(response);\r\n    }\r\n  };\r\n\r\n  const attachStatus = \r\n    authState.sheetId.value ?\r\n      <p className='attach-status green-text text-darken-3'>\r\n        Spreadsheet is successfully attached\r\n      </p>\r\n    :\r\n      attachingError ?\r\n        <p className='attach-status red-text text-darken-3'>\r\n          {attachingError.message}\r\n        </p>\r\n      :\r\n        null\r\n  ;\r\n\r\n  return (\r\n    <Modal \r\n      className='bar__popup card green lighten-5 fade-in__top-right'\r\n      openedState={openedState}\r\n      layoutOpacity='0'\r\n    >\r\n      <div className='card-content'>\r\n        <div className='popup__account'>\r\n          <img \r\n            src={userInfo.imageUrl} \r\n            alt='User pic'\r\n            className='popup__user-image'\r\n          />\r\n          <p>\r\n            {userInfo.name}\r\n          </p>\r\n          <p>\r\n            {userInfo.email}\r\n          </p>\r\n          <button onClick={handleLogOutClick} className='btn-small green darken-3 z-depth-0'>\r\n            Log out\r\n          </button>\r\n          <button onClick={handleRevokeAccessClick} className='btn-small green darken-3 z-depth-0'> \r\n            Revoke access\r\n          </button>\r\n        </div>\r\n        <hr/>\r\n        <div className='input-container'>\r\n          <TextInput\r\n            id='popup_sheetUrl' \r\n            label='Spreadsheet URL'\r\n            inputState={sheetUrlState}\r\n          />\r\n          <button \r\n            onClick={handleAttachClick} \r\n            className='btn-small green darken-3 z-depth-0'\r\n          >\r\n            Attach\r\n          </button>\r\n        </div>\r\n        {attachStatus}\r\n      </div>\r\n    </Modal>\r\n  );\r\n}","D:\\React\\excel\\src\\constants\\index.js",[],"D:\\React\\excel\\src\\components\\modal\\index.js",[],"D:\\React\\excel\\src\\components\\textInput\\index.js",[],"D:\\React\\excel\\src\\components\\layout\\index.js",[],["50","51"],"D:\\React\\excel\\src\\errors\\index.js",[],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":57,"column":5,"nodeType":"58","endLine":57,"endColumn":7,"suggestions":"59"},{"ruleId":"60","severity":1,"message":"61","line":90,"column":9,"nodeType":"62","messageId":"63","endLine":90,"endColumn":25},{"ruleId":"52","replacedBy":"64"},{"ruleId":"54","replacedBy":"65"},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'authState.isSignedIn'. Either include it or remove the dependency array.","ArrayExpression",["68"],"no-unused-vars","'handleFetchClick' is assigned a value but never used.","Identifier","unusedVar",["66"],["67"],"no-global-assign","no-unsafe-negation",{"desc":"69","fix":"70"},"Update the dependencies array to be: [authState.isSignedIn]",{"range":"71","text":"72"},[1464,1466],"[authState.isSignedIn]"]