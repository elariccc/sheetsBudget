{"version":3,"sources":["containers/navBar/index.js","containers/balance/index.js","components/layout/index.js","components/modal/index.js","containers/popup/index.js","components/loadBar/index.js","constants/index.js","containers/googleAuth/index.js","containers/menuBar/index.js","components/messagePanel/index.js","functions/index.js","components/input/index.js","components/inputDate/index.js","components/inputSwitch/index.js","containers/transactions/index.js","containers/app/index.js","index.js"],"names":["tabNames","NavBar","indicator","tabRefs","useRef","useState","tabElements","setTabElements","indexActive","setIndexActive","directionLeft","setDirectionLeft","useEffect","elements","forEach","name","index","classActive","push","ref","element","current","className","onClick","to","length","activeTab","tabDimensions","left","offsetLeft","right","offsetParent","offsetWidth","classAnimation","style","Balance","value","show","Array","fill","numbers","setNumbers","originNumbers","from","String","Number","toFixed","newNumbers","numberEls","map","number","position","BalanceNumber","thousand","topNumber","setTopNumber","bottomNumber","setBottomNumber","isChanging","setIsChanging","containerAnimation","topNumberAnimation","bottomNumberAnimation","containerClass","topNumberClass","bottomNumberClass","maskClass","setTimeout","Layout","color","opacity","layoutEl","setLayoutEl","divLayout","document","createElement","id","nanoid","getElementsByTagName","appendChild","remove","ReactDOM","createPortal","backgroundColor","width","height","top","zIndex","Modal","openedState","children","renderLayout","layoutOpacity","layoutColor","Fragment","set","Popup","authState","googleAuthState","userInfo","src","imageUrl","alt","email","signOut","disconnect","LoadBar","status","dotsLoader","setDotsLoader","opened","setOpened","useMemo","dotsInterval","setInterval","prevState","clearInterval","TEMPLATE_KEY","API_KEY","CLIENT_ID","SCOPES","DISCOVERY_DOCS","SPREADSHEET_ID","GoogleAuth","showMessage","isInited","setIsInited","loadingStatus","setLoadingStatus","googleAuth","setGoogleAuth","popupOpened","setPopupOpened","popupOpenedState","a","gapi","client","init","googleAuthInstance","auth2","getAuthInstance","isSignedIn","listen","get","console","log","error","message","load","callback","timeout","ontimeout","drive","files","list","q","fields","spreadsheetsResponse","spreadsheetIds","result","file","i","keyResponse","sheets","spreadsheets","values","spreadsheetId","range","valueRenderOption","dateTimeRenderOption","spreadsheetWithCorrectKeyId","ranges","includeGridData","templateResponse","newSpreadsheet","undefined","spreadsheetUrl","properties","title","create","templateRequest","attachSpreadsheet","currentUser","getBasicProfile","getName","getEmail","getImageUrl","buttonClass","barButton","signIn","MenuBar","balance","MessagePanel","messageEls","setMessageEls","prevEls","newEls","MessageElement","shift","animation","setAnimation","disappearDelay","messageClass","deepClone","array","item","isArray","Input","label","inputState","type","required","active","setActive","labelClass","autoComplete","onChange","event","target","onFocus","onBlur","htmlFor","onMouseDown","preventDefault","InputDate","InputSwitch","checked","Transactions","updateData","transactionsData","match","useRouteMatch","history","useHistory","isTransactionsLoaded","rowsGroups","setRowsGroups","pages","setPages","activePage","setActivePage","rows","row","purpose","handleDeleteClick","emptyValues","newValues","splice","requestBody","data","valueInputOption","batchUpdate","resource","earned","words","toString","split","earnedIndex","indexOf","join","TransRow","date","amount","reverse","groupsAmount","Math","ceil","groups","pagesElements","pathIndex","exact","path","url","slice","classColor","activeClass","TransForm","Date","toISOString","substr","setDate","dateState","setAmount","amountState","setPurpose","purposeState","setEarned","earnedState","colorClass","transBody","append","querySelectorAll","input","focus","blur","onSubmit","toLocaleString","minimumFractionDigits","maximumFractionDigits","App","setIsSignedIn","setSpreadsheetId","setMessage","useCallback","newMessage","spreadsheetBatch","setSpreadsheetBatch","updateTick","setUpdateTick","updatingStatus","setUpdatingStatus","batchGet","response","valueRanges","transactions","fetchUpdatedValues","setBalance","setTransactionsData","prevTick","render","getElementById"],"mappings":"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","file":"static/js/main.850c07e0.chunk.js","sourcesContent":["import { useState, useEffect, useRef } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './index.css';\r\n\r\nconst tabNames = ['Transactions', 'Diagrams', 'Stonks'];\r\n\r\n\r\nexport default function NavBar() {\r\n  const tabRefs = useRef([]);\r\n  const [ tabElements, setTabElements ] = useState(null);\r\n  const [ indexActive, setIndexActive ] = useState(null);\r\n  const [ directionLeft, setDirectionLeft ] = useState(null);\r\n\r\n  useEffect(\r\n    () => {\r\n      const elements = [];\r\n      \r\n      tabNames.forEach(\r\n        (name, index) => {\r\n          const classActive = \r\n            index === indexActive ?\r\n              'white-text'\r\n            :\r\n              'grey-text text-lighten-1'\r\n          ;\r\n\r\n          const handleTabClick = () => {\r\n            if (index < indexActive) setDirectionLeft(true)\r\n              else setDirectionLeft(false);\r\n            setIndexActive(index);\r\n          };\r\n          \r\n          elements.push(\r\n            <Link \r\n              ref={element => tabRefs.current[index] = element}\r\n              key={index}  \r\n              className={`tab ${classActive}`}\r\n              onClick={handleTabClick}\r\n              to={`/${name}`}\r\n            >\r\n              {name}\r\n            </Link>\r\n          );\r\n        }\r\n      );\r\n\r\n      setTabElements(elements);\r\n    },\r\n    [ indexActive, setIndexActive, setTabElements ]\r\n  );\r\n\r\n  let indicator;\r\n  \r\n  if (tabRefs.current.length && indexActive !== null) {\r\n    const activeTab = tabRefs.current[indexActive];\r\n    \r\n    const tabDimensions = {\r\n      left: activeTab.offsetLeft,\r\n      right: activeTab.offsetParent.offsetWidth - activeTab.offsetLeft - activeTab.offsetWidth,\r\n    };\r\n\r\n    const classAnimation = \r\n      directionLeft ?\r\n        'indicator--to-left'\r\n      :\r\n        'indicator--to-right'\r\n      ;\r\n\r\n    indicator = (\r\n      <div\r\n        className={`tab__indicator z-depth-2 ${classAnimation}`}\r\n        style={tabDimensions}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className='tab-container'>\r\n      {tabElements}\r\n      {indicator}\r\n    </div>\r\n  );\r\n}","import { useEffect, useState } from 'react';\r\n\r\nimport './index.css';\r\n\r\nexport default function Balance({value, show}) {\r\n  const [numbers, setNumbers] = useState(new Array(9).fill('\\u00A0'));\r\n\r\n  useEffect(\r\n    () => {\r\n      const originNumbers = Array.from(String(Number(value).toFixed(2)));\r\n      const newNumbers = new Array(9 - originNumbers.length).fill('\\u00A0');\r\n      newNumbers.push(...originNumbers);\r\n      setNumbers(newNumbers);\r\n    },\r\n    [value]\r\n  );\r\n\r\n  const numberEls = numbers.map(\r\n    (number, position) => <BalanceNumber number={number} key={position} thousand={position === 2}/>\r\n  );\r\n\r\n  return (\r\n    show ?\r\n      <div className='menu-bar__balance'>\r\n        <p className='balance__label white-text'>Balance:</p>\r\n        {numberEls}\r\n      </div>\r\n    :\r\n      null\r\n  );\r\n}\r\n\r\nfunction BalanceNumber({number, thousand}) {\r\n  const [ topNumber, setTopNumber ] = useState('\\u00A0');\r\n  const [ bottomNumber, setBottomNumber ] = useState('\\u00A0');\r\n  const [ isChanging, setIsChanging ] = useState(false);\r\n\r\n  let containerAnimation = '';\r\n  let topNumberAnimation = '';\r\n  let bottomNumberAnimation = '';\r\n\r\n  if (isChanging) {\r\n    containerAnimation = ' number-container--change';\r\n    topNumberAnimation = ' number-top--change';\r\n    bottomNumberAnimation = ' number-bottom--change'\r\n  }\r\n\r\n  const containerClass = 'balance__number-container' + containerAnimation;\r\n  const topNumberClass = 'balance__number' + topNumberAnimation;\r\n  const bottomNumberClass = 'balance__number' + bottomNumberAnimation;\r\n\r\n  const maskClass = 'balance__number-mask card green lighten-4'\r\n    + (thousand ? ' mask--thousand' : '');\r\n\r\n  useEffect(\r\n    () => {\r\n      if (number !== topNumber) {\r\n        setIsChanging(true);\r\n        setBottomNumber(number);\r\n\r\n        setTimeout(\r\n          () => {\r\n            setTopNumber(number);\r\n            setIsChanging(false);\r\n          },\r\n          995\r\n        )\r\n      }\r\n    },\r\n    [number, topNumber]\r\n  )\r\n\r\n  return (\r\n    <div className={maskClass}>\r\n      <div className={containerClass}>\r\n        <p className={topNumberClass}>{topNumber}</p>\r\n        <p className={bottomNumberClass}>{bottomNumber}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import { nanoid } from 'nanoid';\r\nimport { useEffect, useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nexport default function Layout({color = 'black', opacity = 0.5, onClick}) {\r\n  const [layoutEl, setLayoutEl] = useState(null);\r\n\r\n  useEffect(\r\n    () => {\r\n      const divLayout = document.createElement('div');\r\n      divLayout.id = nanoid();\r\n      document.getElementsByTagName(\"BODY\")[0].appendChild(divLayout);\r\n      setLayoutEl(divLayout);\r\n\r\n      return (\r\n        () => {\r\n          divLayout.remove();\r\n        }\r\n      );\r\n    },\r\n    []\r\n  )\r\n\r\n  return (\r\n    layoutEl ?\r\n      ReactDOM.createPortal(\r\n        <div\r\n          style={{\r\n            position: 'fixed',\r\n            backgroundColor: color,\r\n            opacity: opacity,\r\n            width: '100%',\r\n            height: '100%',\r\n            top: '0',\r\n            left: '0',\r\n            zIndex: '1000',\r\n          }}\r\n          onClick={onClick}\r\n        ></div>,\r\n        layoutEl\r\n      )\r\n    : \r\n      null\r\n  );\r\n}","import React from 'react';\r\n\r\nimport Layout from \"../layout/index\";\r\n\r\nexport default function Modal ({\r\n  openedState, \r\n  children, \r\n  className,\r\n  renderLayout,\r\n  layoutOpacity,\r\n  layoutColor,\r\n}) {\r\n  const handleLayoutClick = () => {\r\n    openedState && openedState.set(false);\r\n  }\r\n\r\n  const opened = \r\n    openedState ?\r\n      openedState.value\r\n    : \r\n      true\r\n  ;\r\n\r\n  return (\r\n    opened ? \r\n      <React.Fragment>\r\n        <div \r\n          style={{zIndex: '1001'}}\r\n          className={className}\r\n        >\r\n          {children}\r\n        </div>\r\n        {\r\n        renderLayout ?\r\n          <Layout \r\n            onClick={handleLayoutClick}\r\n            opacity={layoutOpacity}\r\n            color={layoutColor}\r\n          />\r\n        :\r\n          null\r\n        }\r\n      </React.Fragment>\r\n    : \r\n      null\r\n  );\r\n}","import Modal from '../../components/modal/index';\r\n\r\nimport './index.css';\r\n\r\nexport default function Popup({\r\n  authState,\r\n  googleAuthState,\r\n  openedState,\r\n  userInfo,\r\n}) {\r\n  const handleLogOutClick = () => {\r\n    googleAuthState.value.signOut();\r\n    openedState.set(false);\r\n  };\r\n\r\n  const handleRevokeAccessClick = () => {\r\n    googleAuthState.value.disconnect();\r\n    openedState.set(false);\r\n  };\r\n\r\n  return (\r\n    <Modal \r\n      className='bar__popup card green lighten-5 fade-in__top-right'\r\n      openedState={openedState}\r\n      renderLayout\r\n      layoutOpacity='0'\r\n    >\r\n      <div className='card-content'>\r\n        <div className='popup__account'>\r\n          <img \r\n            src={userInfo.imageUrl} \r\n            alt='User pic'\r\n            className='popup__user-image'\r\n          />\r\n          <p>\r\n            {userInfo.name}\r\n          </p>\r\n          <p>\r\n            {userInfo.email}\r\n          </p>\r\n          <button onClick={handleLogOutClick} className='btn-small green darken-3 z-depth-0'>\r\n            Log out\r\n          </button>\r\n          <button onClick={handleRevokeAccessClick} className='btn-small green darken-3 z-depth-0'> \r\n            Revoke access\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}","import React, { useEffect, useMemo, useState } from 'react';\r\n\r\nimport Modal from '../modal/index';\r\n\r\nimport './index.css';\r\n\r\nexport default function LoadBar({status}) {\r\n  const [ dotsLoader, setDotsLoader ] = useState('');\r\n\r\n  const [ opened, setOpened ] = useState(false);\r\n  const openedState = useMemo (\r\n    () => (\r\n      {\r\n        value: opened,\r\n        set: setOpened,\r\n      }\r\n    ),\r\n    [opened, setOpened]\r\n  );\r\n\r\n  useEffect(\r\n    () => {\r\n      const dotsInterval = setInterval(\r\n        () => {\r\n          setDotsLoader(prevState => \r\n            prevState.length === 3 ?\r\n              ''\r\n            :\r\n              prevState + '.'\r\n          );\r\n        },\r\n        750\r\n      );\r\n\r\n      return () => {\r\n        clearInterval(dotsInterval);\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  useEffect(\r\n    () => {\r\n      setOpened(!!status);\r\n    },\r\n    [status]\r\n  )\r\n\r\n  return (\r\n    <Modal\r\n      className='load-bar card green darken-4 white-text'\r\n      openedState={openedState}\r\n    >\r\n      <p>{status + dotsLoader}</p>\r\n    </Modal>\r\n  )\r\n}","export const TEMPLATE_KEY = '16fec496-8586-410a-9133-27a18f3e4771';\r\nexport const API_KEY = 'AIzaSyD7EpkVfwnYbLmrpFxtnKX7EzqgXgHZO_Y';\r\nexport const CLIENT_ID = '811477700755-dhv125fsgng4sss3mghpobho9dvtlvb5.apps.googleusercontent.com';\r\nexport const SCOPES = 'https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/spreadsheets https://www.googleapis.com/auth/drive';\r\nexport const DISCOVERY_DOCS = ['https://sheets.googleapis.com/$discovery/rest?version=v4', 'https://www.googleapis.com/discovery/v1/apis/drive/v3/rest'];\r\nexport const SPREADSHEET_ID = '1Moy3uyOF6KsojUJcX39LNitwSysgmVJAsbG8q0VJsQA';","import React, { useEffect, useMemo, useState } from 'react';\r\n\r\nimport { gapi } from 'gapi-script';\r\n\r\nimport Popup from '../popup/index';\r\nimport LoadBar from '../../components/loadBar/index';\r\n\r\nimport { API_KEY, CLIENT_ID, SCOPES, DISCOVERY_DOCS, TEMPLATE_KEY, SPREADSHEET_ID } from '../../constants/index';\r\n\r\nimport './index.css';\r\n\r\nexport default function GoogleAuth({authState, showMessage}) {\r\n  const [ isInited, setIsInited ] = useState(false);\r\n  const [ loadingStatus, setLoadingStatus ] = useState(null);\r\n\r\n  const [ googleAuth, setGoogleAuth ] = useState(null);\r\n  const googleAuthState = useMemo (\r\n    () => (\r\n      {\r\n        value: googleAuth,\r\n        set: setGoogleAuth,\r\n      }\r\n    ),\r\n    [googleAuth, setGoogleAuth]\r\n  );\r\n\r\n  const [ popupOpened, setPopupOpened ] = useState(false);\r\n  const popupOpenedState = useMemo(\r\n    () => (\r\n      {\r\n        value: popupOpened,\r\n        set: setPopupOpened,\r\n      }\r\n    ),\r\n    [popupOpened, setPopupOpened]\r\n  );\r\n\r\n  useEffect(\r\n    () => {\r\n      if (!isInited && !authState.isSignedIn.value) {\r\n        setLoadingStatus('Initiating Google API client');\r\n        \r\n        gapi.load('client:auth2', {\r\n          callback: initClient,\r\n          timeout: 5000,\r\n          ontimeout: handleTimeout,\r\n        });\r\n      }\r\n\r\n      async function initClient() {\r\n        try {\r\n          await gapi.client.init({\r\n            'apiKey': API_KEY,\r\n            'clientId': CLIENT_ID,\r\n            'scope': SCOPES,\r\n            'discoveryDocs': DISCOVERY_DOCS,\r\n          });\r\n  \r\n          setIsInited(true);\r\n  \r\n          const googleAuthInstance = gapi.auth2.getAuthInstance();\r\n  \r\n          setGoogleAuth(googleAuthInstance);\r\n          googleAuthInstance.isSignedIn.listen(() => authState.isSignedIn.set(googleAuthInstance.isSignedIn.get()));\r\n          authState.isSignedIn.set(googleAuthInstance.isSignedIn.get());\r\n\r\n          showMessage('Google API client has been initiated');\r\n        } catch (error) {\r\n          console.log(error.error.message);\r\n        } finally {\r\n          setLoadingStatus(null);\r\n        }\r\n      }\r\n\r\n      function handleTimeout() {\r\n        console.log('Request is timed out');\r\n        setLoadingStatus(null);\r\n      }\r\n    },\r\n    [isInited, authState.isSignedIn, showMessage]\r\n  );\r\n\r\n  useEffect(\r\n    () => {\r\n      if (authState.isSignedIn.value && !authState.spreadsheetId.value) {\r\n        attachSpreadsheet();\r\n      }\r\n\r\n      async function attachSpreadsheet() {\r\n        try {\r\n          setLoadingStatus('Fetching list of spreadsheet files from your drive');\r\n\r\n          const spreadsheetsResponse = await gapi.client.drive.files.list({\r\n            q: `mimeType = 'application/vnd.google-apps.spreadsheet' and trashed = false and not name = 'OriginTemplate'`,\r\n            fields: 'nextPageToken, files(id, name)',\r\n          });\r\n    \r\n          const spreadsheetIds = spreadsheetsResponse.result.files.map(file => file.id);\r\n    \r\n          let spreadsheetWithCorrectKeyId;\r\n    \r\n          for (let i = 0; i < spreadsheetIds.length; i++) {\r\n            setLoadingStatus(`Looking for a budget spreadsheet, ${i + 1}/${spreadsheetIds.length}`);\r\n            \r\n            let keyResponse;\r\n    \r\n            try {\r\n              keyResponse = await gapi.client.sheets.spreadsheets.values.get({\r\n                spreadsheetId: spreadsheetIds[i],\r\n                range: \"'Сводная таблица'!I20\",\r\n                valueRenderOption: 'UNFORMATTED_VALUE',\r\n                dateTimeRenderOption: 'FORMATTED_STRING',\r\n              });\r\n            } catch (response) {\r\n              keyResponse = response;\r\n            }\r\n    \r\n            const fetchedKey = \r\n              keyResponse.result?.values ?\r\n                keyResponse.result.values[0][0]\r\n              :\r\n                null\r\n            ;\r\n    \r\n            if (fetchedKey === TEMPLATE_KEY) {\r\n              spreadsheetWithCorrectKeyId = spreadsheetIds[i];\r\n              break;\r\n            }\r\n          }\r\n    \r\n          if (!spreadsheetWithCorrectKeyId) {\r\n            setLoadingStatus('Budget spreadsheet has not been found. Creating a new one')\r\n\r\n            const templateResponse = await gapi.client.sheets.spreadsheets.get({\r\n              spreadsheetId: SPREADSHEET_ID,\r\n              ranges: [],\r\n              includeGridData: true,\r\n            });\r\n      \r\n            const newSpreadsheet = templateResponse.result;\r\n            newSpreadsheet.spreadsheetId = undefined;\r\n            newSpreadsheet.spreadsheetUrl = undefined;\r\n            newSpreadsheet.properties.title = 'Budget';\r\n      \r\n            const templateRequest = await gapi.client.sheets.spreadsheets.create({}, newSpreadsheet);\r\n            \r\n            authState.spreadsheetId.set(templateRequest.result.spreadsheetId);\r\n          } else {\r\n            authState.spreadsheetId.set(spreadsheetWithCorrectKeyId);\r\n          }\r\n\r\n          showMessage('Your budget spreadsheet has been attached')\r\n\r\n          setLoadingStatus(null);\r\n        } catch (response) {\r\n          setLoadingStatus(null);\r\n        }\r\n      }\r\n    },\r\n    [authState.isSignedIn.value, showMessage, authState.spreadsheetId.value, authState.spreadsheetId]\r\n  )\r\n\r\n  const handleLogInClick = () => {\r\n    if (isInited) googleAuth.signIn();\r\n  };\r\n\r\n  const handleUserImageClick = () => {\r\n    setPopupOpened(prevState => !prevState);\r\n  }\r\n\r\n  const userInfo = \r\n    authState.isSignedIn.value ?\r\n      {\r\n        name: googleAuth.currentUser.get().getBasicProfile().getName(),\r\n        email: googleAuth.currentUser.get().getBasicProfile().getEmail(),\r\n        imageUrl: googleAuth.currentUser.get().getBasicProfile().getImageUrl(),\r\n      }\r\n    : \r\n      {}\r\n  ;\r\n\r\n  let buttonClass = 'btn green darken-3';\r\n  if (!isInited) buttonClass += ' disabled';\r\n\r\n  const barButton = \r\n    authState.isSignedIn.value ?\r\n      <div className='bar__image-container'>\r\n        <img \r\n          src={userInfo.imageUrl} \r\n          alt='User pic' \r\n          className={`bar__user-image ${popupOpened ? 'bar__user-image__active' : ''}`}\r\n          onClick={handleUserImageClick}\r\n        />\r\n      </div>\r\n    :\r\n      <button\r\n        onClick={handleLogInClick}\r\n        className={buttonClass}\r\n      >\r\n        Log in\r\n      </button>\r\n  ;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className='bar__account-button'>\r\n        {barButton}\r\n      </div>\r\n      <Popup \r\n        authState={authState}\r\n        googleAuthState={googleAuthState}\r\n        openedState={popupOpenedState}\r\n        userInfo={userInfo}\r\n      />\r\n      <LoadBar status={loadingStatus}/>\r\n    </React.Fragment>\r\n  );\r\n}","import NavBar from '../navBar/index';\r\nimport Balance from '../balance/index';\r\nimport GoogleAuth from '../googleAuth/index';\r\n\r\nimport './index.css';\r\n\r\nexport default function MenuBar({authState, balance, showMessage}) {\r\n  return (\r\n    <nav className='menu-bar green'>\r\n      <NavBar/>\r\n      <Balance value={balance} show={authState.isSignedIn.value}/>\r\n      <GoogleAuth authState={authState} showMessage={showMessage}/>\r\n    </nav>\r\n  );\r\n}","import { nanoid } from 'nanoid';\r\nimport { useEffect, useState } from 'react';\r\n\r\nimport './index.css';\r\n\r\nconst disappearDelay = 4000;\r\n\r\nexport default function MessagePanel({message}) {\r\n  const [ messageEls, setMessageEls ] = useState([]);\r\n\r\n  useEffect(\r\n    () => {\r\n      if (message) {\r\n        setMessageEls(\r\n          prevEls => {\r\n            const newEls = [...prevEls];\r\n            newEls.push(<MessageElement message={message} key={nanoid()}/>);\r\n            return newEls;\r\n          }\r\n        );\r\n\r\n        setTimeout(\r\n          () => {\r\n            setMessageEls(\r\n              prevEls => {\r\n                const newEls = [...prevEls];\r\n                newEls.shift();\r\n                return newEls;\r\n              }\r\n            );\r\n          },\r\n          disappearDelay\r\n        );\r\n      }\r\n    },\r\n    [message]\r\n  );\r\n\r\n  return (\r\n    <div\r\n      className='message-panel'\r\n    >\r\n      {messageEls}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction MessageElement ({message}) {\r\n  const [animation, setAnimation] = useState('slide-in__right');\r\n\r\n  useEffect(\r\n    () => {\r\n      setTimeout(\r\n        () => setAnimation('slide-out__right'),\r\n        disappearDelay - 290\r\n      );\r\n    },\r\n    []\r\n  );\r\n\r\n  const messageClass = `message-element card green lighten-3 ${animation}`;\r\n\r\n  return (\r\n    <div\r\n      className={messageClass}\r\n    >\r\n      <p>{message}</p>\r\n    </div>\r\n  );\r\n}","export default function deepClone(array) {\r\n  return array.map(\r\n    item => Array.isArray(item) ? deepClone(item) : item\r\n  );\r\n}","import './index.css';\r\nimport { useState, useEffect } from 'react';\r\n\r\nexport default function Input({id, label, inputState, type, required}) {\r\n  const [active, setActive] = useState(false);\r\n\r\n  useEffect(\r\n    () => {\r\n     if (inputState.value) setActive(true);\r\n    },\r\n    [inputState.value]\r\n  );\r\n\r\n  const handleInputChange = (event) => {\r\n    inputState.set(event.target.value);\r\n  };\r\n\r\n  const handleInputFocus = () => {\r\n    setActive(true);\r\n  };\r\n\r\n  const handleInputBlur = () => {\r\n    if (inputState.value === '') setActive(false);\r\n  };\r\n\r\n  const handleLabelClick = (event) => {\r\n    if (active) event.preventDefault();\r\n  };\r\n\r\n  let labelClass = 'input__label';\r\n  if (active) labelClass += ' input__label--active';\r\n\r\n  return (\r\n    <div className='input'>\r\n      <input \r\n        autoComplete='off' \r\n        id={id} \r\n        type={type} \r\n        value={inputState.value}\r\n        className='input__field'\r\n        onChange={handleInputChange}\r\n        onFocus={handleInputFocus}\r\n        onBlur={handleInputBlur}\r\n        required={required}\r\n      />\r\n      <label \r\n        htmlFor={id}\r\n        className={labelClass}\r\n        onMouseDown={handleLabelClick}\r\n      >\r\n        {label}\r\n      </label>\r\n    </div>\r\n  );\r\n}","import './index.css';\r\n\r\nexport default function InputDate ({inputState}) {\r\n  const handleInputChange = (event) => {\r\n    inputState.set(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <input \r\n      autoComplete='off' \r\n      type='date' \r\n      value={inputState.value}\r\n      className='date-input'\r\n      onChange={handleInputChange}\r\n    />\r\n  );\r\n}","import './index.css';\r\n\r\nexport default function InputSwitch({inputState, label}) {\r\n  const handleInputChange = event => {\r\n    inputState.set(event.target.checked);\r\n  };\r\n\r\n  return (\r\n    <div className='switch'>\r\n      <label>\r\n        {label.left}\r\n        <input \r\n          type='checkbox'\r\n          checked={inputState.value}\r\n          onChange={handleInputChange}\r\n        />\r\n        <span className='lever'/>\r\n        {label.right}\r\n      </label>\r\n    </div>\r\n  );\r\n}","import React, { useState, useMemo, useEffect } from 'react';\r\nimport { Switch, Route, useRouteMatch, useHistory } from 'react-router-dom';\r\n\r\nimport { gapi } from 'gapi-script';\r\nimport deepClone from '../../functions/index';\r\n\r\nimport Input from '../../components/input/index';\r\nimport InputDate from '../../components/inputDate/index';\r\nimport InputSwitch from '../../components/inputSwitch/index';\r\n\r\nimport './index.css';\r\n\r\nexport default function Transactions({authState, updateData, transactionsData}) {\r\n  const match = useRouteMatch();\r\n  const history = useHistory();\r\n  \r\n  const isTransactionsLoaded = !!transactionsData.length;\r\n  \r\n  const [ rowsGroups, setRowsGroups ] = useState(null);\r\n  const [ pages, setPages ] = useState(null);\r\n  const [ activePage, setActivePage ] = useState(0);\r\n  \r\n  useEffect( \r\n    () => {\r\n      if (isTransactionsLoaded) {\r\n        const rows = transactionsData.map(\r\n            (row, index) => {\r\n              const handleDeleteClick = async () => {\r\n                const emptyValues = new Array(699).fill(new Array(3).fill(''));\r\n  \r\n                const newValues = deepClone(transactionsData);\r\n                newValues.splice(index, 1);\r\n  \r\n                const emptyBody = {\r\n                  range: \"'Бюджет'!A3\",\r\n                  values: emptyValues,\r\n                };\r\n  \r\n                const newBody = {\r\n                  range: \"'Бюджет'!A3\",\r\n                  values: newValues,\r\n                };\r\n  \r\n                const newData = [emptyBody, newBody];\r\n  \r\n                const requestBody = {\r\n                  data: newData,\r\n                  valueInputOption: 'USER_ENTERED',\r\n                };\r\n  \r\n                await gapi.client.sheets.spreadsheets.values.batchUpdate({\r\n                  spreadsheetId: authState.spreadsheetId.value,\r\n                  resource: requestBody,\r\n                });\r\n  \r\n                updateData();\r\n              }\r\n  \r\n              let purpose;\r\n              let earned = false;\r\n    \r\n              if (row[2]) {\r\n                const words = row[2].toString().split(' ');\r\n                const earnedIndex = words.indexOf('зарплата');\r\n    \r\n                if (earnedIndex !== -1) {\r\n                  words.splice(earnedIndex, 1);\r\n                  purpose = words.join(' ');\r\n                  earned = true;\r\n                } else {\r\n                  purpose = row[2];\r\n                }\r\n              }\r\n    \r\n              return (\r\n                <TransRow\r\n                  date={row[0]}\r\n                  amount={row[1] ? row[1] : '\\u00A0'}\r\n                  purpose={purpose ? purpose : '\\u00A0'}\r\n                  earned={earned}\r\n                  key={index}\r\n                  handleDeleteClick={handleDeleteClick}\r\n                />\r\n              );\r\n            }\r\n          ).reverse()\r\n  \r\n        const groupsAmount = Math.ceil(rows.length / 10);\r\n        const groups = [];\r\n        const pagesElements = [];\r\n  \r\n        for (let i = 0; i < groupsAmount; i++) {\r\n          const pathIndex = i ? `/${i + 1}` : '';\r\n\r\n          groups.push(\r\n            <Route exact path={`${match.url}${pathIndex}`} key={i}>\r\n              {rows.slice(10 * i, 10 * i + 10)}\r\n            </Route>\r\n          );\r\n\r\n          const handlePageClick = () => {\r\n            history.push(`${match.url}${pathIndex}`);\r\n            setActivePage(i);\r\n          };\r\n\r\n          const classColor = \r\n            i === activePage ?\r\n              'green white-text'\r\n            :\r\n              'green darken-3 white-text'\r\n          ;\r\n\r\n          pagesElements.push(\r\n            <div\r\n              className={`pages__number card ${classColor}`}\r\n              onClick={handlePageClick}\r\n              key={i}\r\n            >\r\n              {i + 1}\r\n            </div>\r\n          );\r\n\r\n          setRowsGroups(groups);\r\n          setPages(pagesElements);\r\n        }\r\n      }\r\n    },\r\n    [ isTransactionsLoaded, transactionsData, authState.spreadsheetId.value, updateData, match.url, history, activePage, setActivePage ]\r\n  );\r\n\r\n  const activeClass = isTransactionsLoaded ? 'trans__table--active' : null;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className='trans-container card green lighten-5'>\r\n        <h2 className='green-text text-darken-4'>Transactions</h2>\r\n        <hr/>\r\n        <div className={`trans__table ${activeClass}`}>\r\n          <TransForm\r\n            authState={authState}\r\n            updateData={updateData}\r\n          />\r\n          <Switch>\r\n            {rowsGroups}\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        {pages}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nfunction TransForm({authState, updateData}) {\r\n  const [ date, setDate ] = useState(new Date().toISOString().substr(0,10));\r\n  const dateState = useMemo(\r\n    () => (\r\n      {\r\n        value: date,\r\n        set: setDate,\r\n      }\r\n    ),\r\n    [ date, setDate ]\r\n  );\r\n\r\n  const [ amount, setAmount ] = useState('');\r\n  const amountState = useMemo(\r\n    () => (\r\n      {\r\n        value: amount,\r\n        set: setAmount,\r\n      }\r\n    ),\r\n    [ amount, setAmount ]\r\n  );\r\n\r\n  const [ purpose, setPurpose ] = useState('');\r\n  const purposeState = useMemo(\r\n    () => (\r\n      {\r\n        value: purpose,\r\n        set: setPurpose,\r\n      }\r\n    ),\r\n    [ purpose, setPurpose ]\r\n  );\r\n\r\n  const [ earned, setEarned ] = useState(false);\r\n  const earnedState = useMemo(\r\n    () => (\r\n      {\r\n        value: earned,\r\n        set: setEarned,\r\n      }\r\n    ),\r\n    [ earned, setEarned ]\r\n  );\r\n\r\n  const colorClass = earned ? 'green lighten-4' : 'grey lighten-3';\r\n\r\n  async function handleFormSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    const transBody = {\r\n      values: [\r\n        [\r\n          date,\r\n          amount,\r\n          ( earned ? 'зарплата ' : '' ) + purpose\r\n        ]\r\n      ]\r\n    };\r\n\r\n    await gapi.client.sheets.spreadsheets.values.append({\r\n      spreadsheetId: authState.spreadsheetId.value,\r\n      range: \"'Бюджет'!A3\",\r\n      valueInputOption: 'USER_ENTERED',\r\n      resource: transBody,\r\n    });\r\n\r\n    updateData();\r\n\r\n    setDate(new Date().toISOString().substr(0,10));\r\n    setAmount('');\r\n    setPurpose('');\r\n    setEarned(false);\r\n\r\n    const inputs = event.target.querySelectorAll('input');\r\n\r\n    inputs.forEach(\r\n      input => {\r\n        input.focus(); input.blur();\r\n      }\r\n    );\r\n  }\r\n\r\n  return (\r\n    <form \r\n      className='trans__row-container'\r\n      onSubmit={handleFormSubmit}\r\n    >\r\n      <div className={`trans__row ${colorClass}`}>\r\n        <InputDate\r\n          inputState={dateState}\r\n        />\r\n        <Input\r\n          inputState={amountState}\r\n          label='Amount of money'\r\n          id='moneyAmount'\r\n          type='number'\r\n          required={true}\r\n        />\r\n        <Input\r\n          inputState={purposeState}\r\n          id='purpose'\r\n          type='text'\r\n          label='Purpose'\r\n        />\r\n        <InputSwitch\r\n          inputState={earnedState}\r\n          label={{left:'Spent', right:'Earned'}}\r\n        />\r\n      </div>\r\n      <button \r\n        className='material-icons trans__submit green-text text-darken-4'\r\n        type='submit'\r\n      >add_circle_outline</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nfunction TransRow({date, amount, purpose, earned, handleDeleteClick}) {\r\n  const colorClass = earned ? 'green lighten-4' : 'grey lighten-3';\r\n\r\n  return (\r\n    <div \r\n      className='trans__row-container'\r\n    >\r\n      <div className={`trans__row ${colorClass}`}>\r\n        <span>{date}</span>\r\n        <span className='row__amount'>{amount.toLocaleString('fr-Fr', {minimumFractionDigits: 2, maximumFractionDigits: 2})}</span>\r\n        <span>{purpose}</span>\r\n        <span>{earned ? 'Earned' : 'Spent'}</span>\r\n      </div>\r\n      <button \r\n        className='material-icons trans__submit green-text text-darken-4'\r\n        type='button'\r\n        onClick={handleDeleteClick}\r\n      >backspace</button>\r\n    </div>\r\n  );\r\n}","import React, {useCallback, useEffect, useMemo, useState} from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nimport { gapi } from 'gapi-script';\r\n\r\nimport MenuBar from '../menuBar/index';\r\nimport MessagePanel from '../../components/messagePanel/index';\r\nimport LoadBar from '../../components/loadBar/index';\r\nimport Transactions from '../transactions/index';\r\n\r\nimport './index.css';\r\n\r\nimport '../../materialize/animations.css';\r\nimport '../../materialize/button.css';\r\nimport '../../materialize/card.css';\r\nimport '../../materialize/palette.css';\r\nimport '../../materialize/preloader.css';\r\nimport '../../materialize/shadow.css';\r\nimport '../../materialize/table.css';\r\n\r\nexport default function App() {\r\n  const [ isSignedIn, setIsSignedIn ] = useState(false);\r\n  const [ spreadsheetId, setSpreadsheetId ] = useState(null);\r\n\r\n  const authState = useMemo(\r\n    () => (\r\n      {\r\n        isSignedIn: {\r\n          value: isSignedIn,\r\n          set: setIsSignedIn,\r\n        },\r\n        spreadsheetId: {\r\n          value: spreadsheetId,\r\n          set: setSpreadsheetId,\r\n        },\r\n      }\r\n    ),\r\n    [isSignedIn, setIsSignedIn, spreadsheetId, setSpreadsheetId]\r\n  );\r\n\r\n  const [ message, setMessage ] = useState(null);\r\n\r\n  const showMessage = useCallback(\r\n    newMessage => {\r\n      setMessage(null);\r\n      setMessage(newMessage);\r\n    },\r\n    [ setMessage ]\r\n  );\r\n\r\n  const [ spreadsheetBatch, setSpreadsheetBatch ] = useState(null);\r\n  const [ updateTick, setUpdateTick ] = useState(0);\r\n  const [ updatingStatus, setUpdatingStatus ] = useState(null);\r\n\r\n  function updateData() {\r\n    setUpdateTick(prevTick => ++prevTick);\r\n  }\r\n\r\n  //update data body\r\n  useEffect(\r\n    () => {\r\n      if (isSignedIn && spreadsheetId) fetchUpdatedValues();\r\n\r\n      async function fetchUpdatedValues() {\r\n        try {\r\n          setUpdatingStatus('Updating data');\r\n\r\n          const response = await gapi.client.sheets.spreadsheets.values.batchGet({\r\n            spreadsheetId: spreadsheetId,\r\n            ranges: [\r\n              \"'Бюджет'!F1\",\r\n              \"'Бюджет'!A3:C701\",\r\n            ],\r\n            valueRenderOption: 'UNFORMATTED_VALUE',\r\n            dateTimeRenderOption: 'FORMATTED_STRING',\r\n          });\r\n\r\n          const valueRanges = response.result.valueRanges;\r\n    \r\n          setSpreadsheetBatch({\r\n            balance: valueRanges[0],\r\n            transactions: valueRanges[1],\r\n          });\r\n\r\n          showMessage('Data has been updated');\r\n        } catch (response) {\r\n          console.log(response);\r\n        } finally {\r\n          setUpdatingStatus(null);\r\n        }\r\n      }\r\n    },\r\n    [spreadsheetId, updateTick, isSignedIn, showMessage]\r\n  );\r\n \r\n  const [ balance, setBalance ] = useState(null);\r\n  const [ transactionsData, setTransactionsData ] = useState([]);\r\n\r\n  //setting data to its hooks\r\n  useEffect(\r\n    () => {\r\n      if (spreadsheetBatch) {\r\n        setBalance(spreadsheetBatch.balance.values[0][0]);\r\n        setTransactionsData(spreadsheetBatch.transactions.values ? spreadsheetBatch.transactions.values : []);\r\n      }\r\n    },\r\n    [spreadsheetBatch]\r\n  );\r\n\r\n   //handle sign out\r\n  useEffect(\r\n    () => {\r\n      if (!isSignedIn) {\r\n        setSpreadsheetId(null);\r\n        setSpreadsheetBatch(null);\r\n      }\r\n    },\r\n    [isSignedIn, setSpreadsheetId, setSpreadsheetBatch]\r\n  );\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <MenuBar\r\n        authState={authState}\r\n        balance={balance}\r\n        showMessage={showMessage}\r\n      />\r\n      <div className='field-container'>\r\n        <Switch>\r\n          <Route path='/Transactions'>\r\n            <Transactions\r\n              authState={authState}\r\n              updateData={updateData}\r\n              transactionsData={transactionsData}\r\n            />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n      <LoadBar status={updatingStatus}/>\r\n      <MessagePanel message={message}/>\r\n    </React.Fragment>\r\n  );\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport App from './containers/app/index';\n\nimport './index.css';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);"],"sourceRoot":""}